package common

import (
	"strconv"
	"github.com/mudmap-io/backend-api/internal/auth"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)

const (
	Success = "success"
	Error   = "error"
	Warning = "warning"
)

type FlashMessage struct {
	Type     string
	Title    string
	Messages []string
}
type FlashMessageOption func(*FlashMessage)

func WithType(t string) FlashMessageOption {
	return func(n *FlashMessage) {
		n.Type = t
	}
}

func WithTitle(t string) FlashMessageOption {
	return func(n *FlashMessage) {
		n.Title = t
	}
}

func WithMessages(messages []string) FlashMessageOption {
	return func(n *FlashMessage) {
		n.Messages = messages
	}
}
func defaultTitle(s string) string {
	title := cases.Title(language.English)
	switch s {
	case Error:
		return title.String(Error)
	case Success:
		return title.String(Success)
	case Warning:
		return title.String(Warning)
	default:
		return title.String(Error)
	}
}
func NewFlashMessage(fd auth.FlashData, opts ...FlashMessageOption) *FlashMessage {
	navbarFlashMessage := &FlashMessage{
		Type:     fd.Type,
		Messages: fd.Messages,
		Title:    defaultTitle(fd.Type),
	}

	for _, opt := range opts {
		opt(navbarFlashMessage)
	}

	return navbarFlashMessage
}

templ Flash(mf FlashMessage) {
	switch mf.Type {
		case Error:
			@ErrorFlash(mf)
		case Success:
			@SuccessFlash(mf)
		case Warning:
			@WarningFlash(mf)
		default:
	}
}

templ ErrorFlash(mf FlashMessage) {
	<div id="dismissible-flash" class="rounded-md bg-red-50 p-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				if len(mf.Messages) == 1 {
					<h3 class="text-sm font-medium text-red-800">There was 1 error with your submission</h3>
				} else {
					<h3 class="text-sm font-medium text-red-800">There were { strconv.Itoa(len(mf.Messages)) } errors with your submission</h3>
				}
				<div class="mt-2 text-sm text-red-700">
					<ul role="list" class="list-disc space-y-1 pl-5">
						for _, v := range mf.Messages {
							<li>{ v }</li>
						}
					</ul>
				</div>
			</div>
			@DismissibleIcon(mf.Type)
		</div>
	</div>
}

templ SuccessFlash(mf FlashMessage) {
	<div id="dismissible-flash" class="rounded-md bg-green-50 p-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				<h3 class="text-sm font-medium text-green-800">{ mf.Title }</h3>
				<div class="mt-2 text-sm text-green-700">
					<ul role="list" class="list-disc space-y-1 pl-5">
						for _, v := range mf.Messages {
							<li>{ v }</li>
						}
					</ul>
				</div>
			</div>
			@DismissibleIcon(mf.Type)
		</div>
	</div>
}

templ WarningFlash(mf FlashMessage) {
	<div id="dismissible-flash" class="rounded-md bg-yellow-50 p-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path fill-rule="evenodd" d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				<h3 class="text-sm font-medium text-yellow-800">{ mf.Title }</h3>
				<div class="mt-2 text-sm text-yellow-700">
					<ul role="list" class="list-disc space-y-1 pl-5">
						for _, v := range mf.Messages {
							<li>{ v }</li>
						}
					</ul>
				</div>
			</div>
			@DismissibleIcon(mf.Type)
		</div>
	</div>
}

templ DismissibleIcon(flashType string) {
	<div class="ml-auto pl-3">
		<div class="-mx-1.5 -my-1.5">
			<button
				hx-delete="/fragment/empty"
				hx-target="#dismissible-flash"
				hx-swap="outerHTML"
				type="button"
				class={
					"inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2",
					templ.KV("bg-green-50 text-green-700 hover:bg-green-100 focus:ring-green-600 focus:ring-offset-green-50", flashType == auth.Success),
					templ.KV("bg-yellow-50 text-yellow-700 hover:bg-yellow-100 focus:ring-yellow-600 focus:ring-offset-yellow-50", flashType == auth.Warning),
					templ.KV("bg-red-50 text-red-700 hover:bg-red-100 focus:ring-red-600 focus:ring-offset-red-50", flashType == auth.Error),
				}
			>
				<span class="sr-only">Dismiss</span>
				<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"></path>
				</svg>
			</button>
		</div>
	</div>
}
