#!/bin/bash
set -e -x -o pipefail

ADMIN_PASSWORD="${ADMIN_PASSWORD}"
OWNER="danielmichaels"
REPO="tawny"
export ARKADE=/usr/local/bin/arkade
# When running as a startup script (cloud-init), the HOME variable is not always set.
# As it is required for arkade to properly download tools,
# set the variable to /usr/local so arkade will download binaries to /usr/local/.arkade
if [ -z "${HOME}" ]; then
  export HOME=/usr/local
fi

K3S_VERSION="v1.29.3+k3s1"
echo "Finding version from GitHub"
RELEASE_VERSION=$(curl -sI https://github.com/$OWNER/$REPO/releases/latest | grep -i "location:" | awk -F"/" '{ printf "%s", $NF }' | tr -d '\r')
VERSION="${VERSION:-$RELEASE_VERSION}"
echo "$VERSION"

if [ ! "$VERSION" ]; then
  echo "Failed while attempting to get version"
  exit 1
fi

if [ ! "$ADMIN_PASSWORD" ]; then
  ADMIN_PASSWORD=$(openssl rand -base64 14)
fi

SUDO=sudo
if [ "$(id -u)" -eq 0 ]; then
  SUDO=
fi

has_yum() {
  [ -n "$(command -v yum)" ]
}

has_apt_get() {
  [ -n "$(command -v apt-get)" ]
}

has_pacman() {
  [ -n "$(command -v pacman)" ]
}

install_required_packages() {
  if $(has_apt_get); then
    # Debian bullseye is missing iptables. Added to required packages
    # to get it working in raspberry pi. No such known issues in
    # other distros. Hence, adding only to this block.
    # reference: https://github.com/openfaas/faasd/pull/237
    $SUDO apt-get update -y
    $SUDO apt-get install -y curl jq iptables
  elif $(has_yum); then
    $SUDO yum check-update -y
    $SUDO yum install -y curl jq
  elif $(has_pacman); then
    $SUDO pacman -Syy
    $SUDO pacman -Sy curl jq
  else
    fatal "Could not find apt-get, yum, or pacman. Cannot install dependencies on this OS."
    exit 1
  fi
}

install_arkade() {
  curl -sLS https://get.arkade.dev | $SUDO sh
  arkade --help
  arkade get helm k9s kubectx kubens
  add_arkade_to_bash
}

add_arkade_to_bash() {
  echo "export PATH=$HOME/.arkade/bin:$PATH" >>.bashrc
}

install_k3s() {
  echo "Installing k3s $K3S_VERSION"
  curl -sfL https://get.k3s.io |
    K3S_KUBECONFIG_MODE="644" \
      INSTALL_K3S_EXEC="--disable traefik" \
      sh -
  export KUBECONFIG="/etc/rancher/k3s/k3s.yaml"
  arkade install traefik2 --dashboard --wait
  arkade install cert-manager --wait
}

make_directories() {
  $SUDO mkdir -p /var/tawny/{source,data}
}

etc_hosts() {
  $SUDO cp /etc/hosts /etc/hosts.bak
  echo "127.0.0.1 api.tawny.internal tawny.internal" >> /etc/hosts
}

install_tawny() {
  echo "download manifests"
  kubectl apply -f "https://raw.githubusercontent.com/$OWNER/$REPO/$VERSION/zarf/k8s/namespace.yaml" || true
  helm upgrade --install postgres oci://registry-1.docker.io/bitnamicharts/postgresql \
    --namespace tawny \
    --values "https://raw.githubusercontent.com/$OWNER/$REPO/$VERSION/zarf/k8s/postgres/values.yaml" || true
  # add a wait for
  kubectl create secret generic admin-password --from-literal="admin-password=${ADMIN_PASSWORD}" --namespace $REPO || true

  manifests=("configmap" "deployment" "ingress" "service")

  for manifest in "${manifests[@]}"; do
    kubectl apply -f "https://raw.githubusercontent.com/$OWNER/$REPO/$VERSION/zarf/k8s/$REPO/$manifest.yaml"
  done
}

printer() {
  echo -e "\nCongratulations! Your Tawny instance is ready to use.\n"
  echo -e "Please visit http://$(curl -4s https://ifconfig.io):9090 to get started.\n"
  echo "Login with:"
  echo "Username: admin"
  echo "Password: $ADMIN_PASSWORD"
  echo "Consider changing this after first login"
}

install_required_packages
install_arkade
install_k3s
make_directories
install_tawny
etc_hosts
printer
